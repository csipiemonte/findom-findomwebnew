##############################################################################
# Copyright Regione Piemonte - 2020
# SPDX-License-Identifier: EUPL-1.2-or-later
##############################################################################

# Lista query servizi FindomWeb

SELECT_STATI_DOMANDA = SELECT model_state CODICESTATO, model_state_descr DESCRIZIONE, from_date DATAINIZIO, end_date DATAFINE FROM aggr_d_model_state  order by 1

INSERT_LOGAUDIT = INSERT INTO csi_log_audit ( data_ora, id_app, ip_address, utente, operazione, ogg_oper, key_oper) \n\
				VALUES ( now(), :idApp, :ipAddress, :utente, :operazione, :oggOper, :keyOper)

INSERT_LOG_FIRMA = INSERT INTO LOG_T_FIRMA_DIGITALE (ID_LOG_FIRMA, MESSAGGIO, DT_LOG, UTENTE, METODO, ID_DOMANDA) \n\
				VALUES (nextval('log_t_firma_digitale_id_log_firma_seq'), substr(:msg,1,200), now(), :utente, :metodo, :idDomanda)	
									
SELECT_SHELL_SOGGETTI_BYCF = SELECT id_soggetto, cod_fiscale, denominazione, id_forma_giuridica, cognome, nome \n\
						FROM shell_t_soggetti where cod_fiscale = :cfUtente

SELECT_SHELL_SOGGETTI_BYID = SELECT id_soggetto, cod_fiscale, denominazione, id_forma_giuridica, cognome, nome \n\
						FROM shell_t_soggetti where id_soggetto IN #condizione#  order by denominazione

SELECT_VISTA_DOMANDE = SELECT id_domanda, cod_stato_domanda, stato_domanda, id_tipol_beneficiario, descrizione_tipol_beneficiario, \n\
										 tipo_ente_beneficiario, cod_stereotipo, id_soggetto_creatore, cognome_soggetto_creatore, nome_soggetto_creatore, \n\
										 dt_creazione_domanda, id_soggetto_invio, cognome_soggetto_invio, nome_soggetto_invio, dt_invio_domanda, \n\
										 id_soggetto_beneficiario, denominazione_soggetto_beneficiario, id_sportello_bando, num_atto, dt_atto, \n\
										 dt_apertura_sportello, dt_chiusura_sportello, id_bando, descr_bando, descr_breve_bando, id_normativa, normativa, \n\
										 id_classificazione_asse_prioritario, codice_asse_prioritario, descrizione_asse_prioritario, \n\
										 id_classificazione_priorita_investimento, codice_priorita_investimento, descrizione_priorita_investimento, \n\
										 id_classificazione_azione, codice_azione, descrizione_azione, flag_demat, tipo_firma \n\
										 id_soggetto_conclusione, dt_conclusione, cognome_soggetto_conclusione, nome_soggetto_conclusione, \n\
										 data_protocollo, numero_protocollo, data_classificazione \n\
										 FROM findom_v_domande_nuova_gestione

SELECT_SHELL_DOMANDE_BY_CREAT_BENEFIC = SELECT * FROM shell_t_domande WHERE id_soggetto_beneficiario = :idSoggBeneficiario #condizione#
#condizione = AND id_soggetto_creatore = "+idSoggCreatore;

SELECT_FINDOM_AMMINISTRATORI_BY_COD_FISCALE = SELECT id_amministratore, cod_fiscale, cognome, nome, id_ente_appartenenza, dt_inizio, dt_fine  \n\
											FROM findom_t_amministratori WHERE cod_fiscale = :codiceFiscale


SELECT_VISTA_DOMANDE_BY_FILTRO_SEARCH = SELECT domande.* , d.dt_richiesta_integrazione,d.dt_termine_integrazione, d.flag_abilita_integrazione \n\
										from (select id_domanda, cod_stato_domanda, stato_domanda, id_tipol_beneficiario, descrizione_tipol_beneficiario,\n\
										 tipo_ente_beneficiario, cod_stereotipo, id_soggetto_creatore, cognome_soggetto_creatore, nome_soggetto_creatore,\n\
										 dt_creazione_domanda, id_soggetto_invio, cognome_soggetto_invio, nome_soggetto_invio, dt_invio_domanda, \n\
										 id_soggetto_beneficiario, denominazione_soggetto_beneficiario, id_sportello_bando, num_atto, dt_atto, \n\
										 dt_apertura_sportello, dt_chiusura_sportello, id_bando, descr_bando, descr_breve_bando, id_normativa, normativa, \n\
										 id_classificazione_asse_prioritario, codice_asse_prioritario, descrizione_asse_prioritario, \n\
										 id_classificazione_priorita_investimento, codice_priorita_investimento, descrizione_priorita_investimento, \n\
										 id_classificazione_azione, codice_azione, descrizione_azione, flag_demat, tipo_firma, \n\
										 id_soggetto_conclusione, dt_conclusione, cognome_soggetto_conclusione, nome_soggetto_conclusione, \n\
										 data_protocollo, numero_protocollo, data_classificazione, flag_progetti_comuni, sigla_nazione \n\
										 FROM findom_v_domande_nuova_gestione \n\
										 WHERE #condizione# UNION \n\
										 SELECT id_domanda, cod_stato_domanda, stato_domanda, id_tipol_beneficiario, descrizione_tipol_beneficiario, \n\
										 tipo_ente_beneficiario, cod_stereotipo, id_soggetto_creatore, cognome_soggetto_creatore, nome_soggetto_creatore, \n\
										 dt_creazione_domanda, id_soggetto_invio, cognome_soggetto_invio, nome_soggetto_invio, dt_invio_domanda, \n\
										 id_soggetto_beneficiario, denominazione_soggetto_beneficiario, id_sportello_bando, num_atto, dt_atto, \n\
										 dt_apertura_sportello, dt_chiusura_sportello, id_bando, descr_bando, descr_breve_bando, id_normativa, normativa, \n\
										 id_classificazione_asse_prioritario, codice_asse_prioritario, descrizione_asse_prioritario, \n\
										 id_classificazione_priorita_investimento, codice_priorita_investimento, descrizione_priorita_investimento, \n\
										 id_classificazione_azione, codice_azione, descrizione_azione, flag_demat, tipo_firma, \n\
										 id_soggetto_conclusione, dt_conclusione, cognome_soggetto_conclusione, nome_soggetto_conclusione, \n\
										 data_protocollo, numero_protocollo, data_classificazione, flag_progetti_comuni, sigla_nazione \n\
										 FROM findom_v_domande   WHERE #condizione# ) as domande \n\
										 left join shell_t_domande d on domande.id_domanda=d.id_domanda \n\


INSERT_SHELL_SOGGETTI = INSERT INTO shell_t_soggetti (cod_fiscale, denominazione, id_forma_giuridica, cognome, nome) VALUES (:codFiscale, :denominazione, :idFormaGiuridica, :cognome, :nome)
INSERT_SHELL_SOGGETTI_BIS = INSERT INTO shell_t_soggetti (cod_fiscale, denominazione, cognome, nome) VALUES (:codFiscale, :denominazione, :cognome, :nome)

UPDATE_SHELL_SOGGETTI = UPDATE shell_t_soggetti SET denominazione=:denominazione, id_forma_giuridica=:idFormaGiuridica, nome=:nome, cognome=:cognome \n\
						WHERE id_soggetto = :idSoggetto \n\

SELECT_VISTA_SPORTELLI_ATTIVI = SELECT id_sportello_bando, \n\
								to_char(to_timestamp(dt_apertura, 'YYYY-MM-DD HH24:MI:SS'),'DD/MM/YYYY HH24:MI'::text) AS dt_apertura, \n\
								to_char(to_timestamp(dt_chiusura, 'YYYY-MM-DD HH24:MI:SS'),'DD/MM/YYYY HH24:MI'::text) AS dt_chiusura, \n\
								num_max_domande_sportello, id_bando, num_max_domande_bando, descrizione_bando, \n\
       						   	descrizione_breve_bando,  codice_azione, id_normativa, normativa \n\
       						   	FROM findom_v_sportelli_attivi_nuova_gestione \n\
       							ORDER BY dt_apertura

SELECT_VISTA_SPORTELLI_ATTIVI_BY_IDNORMATIVA = SELECT id_sportello_bando, \n\
								to_char(to_timestamp(dt_apertura, 'YYYY-MM-DD HH24:MI:SS'),'DD/MM/YYYY HH24:MI'::text) AS dt_apertura, \n\
								to_char(to_timestamp(dt_chiusura, 'YYYY-MM-DD HH24:MI:SS'),'DD/MM/YYYY HH24:MI'::text) AS dt_chiusura, \n\
								num_max_domande_sportello, id_bando, num_max_domande_bando, descrizione_bando, \n\
								descrizione_breve_bando, codice_azione, id_normativa, normativa \n\
								FROM findom_v_sportelli_attivi_nuova_gestione \n\
       							WHERE id_normativa = :idNormativa \n\
       							ORDER BY dt_apertura

SELECT_VISTA_SPORTELLI_ATTIVI_BY_IDBANDO = SELECT id_sportello_bando, \n\
								to_char(to_timestamp(dt_apertura, 'YYYY-MM-DD HH24:MI:SS'),'DD/MM/YYYY HH24:MI'::text) AS dt_apertura, \n\
								to_char(to_timestamp(dt_chiusura, 'YYYY-MM-DD HH24:MI:SS'),'DD/MM/YYYY HH24:MI'::text) AS dt_chiusura, \n\
								num_max_domande_sportello, id_bando, num_max_domande_bando, descrizione_bando, \n\
       							descrizione_breve_bando, codice_azione, id_normativa, normativa \n\
       							FROM findom_v_sportelli_attivi_nuova_gestione \n\
       						    WHERE id_bando = :idBando \n\
       							ORDER BY dt_apertura

SELECT_PPROSSIMO_SPORTELLO_ATTIVO = SELECT to_char(sp.dt_apertura, 'DD/MM/YYYY'::text) AS dt_apertura, \n\
									to_char(sp.dt_apertura, 'HH24:MI'::text) AS ora_apertura, \n\
    						   		b.descr_breve AS descrizione_bando \n\
									FROM findom_t_sportelli_bandi sp \n\
									JOIN findom_t_bandi b ON b.id_bando = sp.id_bando AND b.flag_nuova_gestione = true \n\
									WHERE sp.dt_apertura > now() order by sp.dt_apertura limit 1

SELECT_TIPOL_BENEFICIARI = SELECT id_tipol_beneficiario, descrizione, cod_stereotipo, flag_pubblico_privato, codice \n\
						   FROM findom_d_tipol_beneficiari \n\
						   ORDER BY descrizione

SELECT_TIPOL_BENEFICIARI_BY_IDBANDO = SELECT ben.id_tipol_beneficiario, ben.descrizione, ben.cod_stereotipo, ben.flag_pubblico_privato, ben.codice \n\
 										FROM findom_d_tipol_beneficiari ben, findom_r_tipol_beneficiari_bandi rel \n\
 										WHERE rel.id_bando = :idBando \n\
 										and ben.id_tipol_beneficiario = rel.id_tipol_beneficiario \n\
 										ORDER BY ben.descrizione
 
 SELECT_VISTA_DOMANDE_BENEFICIARI = SELECT id_bando, id_sportello_bando, dt_apertura, dt_chiusura, id_soggetto_beneficiario, num_domande_bando,  num_domande_sportello \n\
									FROM findom_v_domande_beneficiari WHERE id_bando=:idBando AND id_soggetto_beneficiario=:idSoggettoBeneficiario
									
##query parziale - eliminate colonne : template, pdf_template,  model_validation_rules, command_validation_rules,  global_validation_rules
SELECT_AGGR_TEMPLATE_WITH_FINDOM_BANDI = SELECT a.template_id, template_code, template_description, template_name, template_last_update, template_valid_from_date, template_valid_to_date, template_state, \n\
						 template_splitted FROM aggr_t_template a, findom_t_bandi b \n\
						 WHERE b.id_bando = :idBando  \n\
						 AND a.template_valid_from_date < now() AND a.template_valid_to_date > now() AND a.template_state = 'OK' \n\
						 AND a.template_id = b.template_id

SELECT_AGGR_MODEL_BY_USTPPR = SELECT model_id, template_code_fk, model_progr, user_id, serialized_model, model_state_fk, model_name, model_last_update \n\
						 FROM aggr_t_model WHERE user_id = :userId AND template_code_fk = :templateCode AND model_progr = :modelProg
				
INSERT_SHELLDOMANDE = INSERT INTO shell_t_domande ( id_domanda, id_soggetto_creatore, id_soggetto_beneficiario, id_sportello_bando, id_soggetto_invio,  \n\
					dt_creazione, id_tipol_beneficiario, dt_invio_domanda ) \n\
					VALUES ( :idModel , :idSoggettoCollegato, :idSoggettoBeneficiario, :numSportello, :idSoggettoInvio, now(), :idTipologiaBeneficiario, null)
 

SELECT_AGGR_DATA_BY_IDDOMANDA = SELECT t.template_id, t.template_code, t.template_description, t.template_name, \n\
							 	   m.model_id, m.model_progr, m.user_id, m.model_state_fk, m.model_name, \n\
								   d.id_soggetto_creatore, d.id_soggetto_beneficiario, d.id_sportello_bando, d.id_soggetto_invio, \n\
								   d.dt_creazione, d.id_tipol_beneficiario, d.dt_invio_domanda, d.dt_conclusione,\n\
								   to_char(s.dt_apertura,'DD/MM/YYYY HH24:MI'::text) AS dt_apertura, \n\
								   to_char(s.dt_chiusura,'DD/MM/YYYY HH24:MI'::text) AS dt_chiusura \n\
								FROM aggr_t_template t , aggr_t_model m, shell_t_domande d ,findom_t_sportelli_bandi s \n\
								WHERE  d.id_domanda = :idDomanda \n\
								AND d.id_sportello_bando = s.id_sportello_bando \n\
								AND m.template_code_fk = t.template_code AND d.id_domanda = m.model_id


DELETE_SHELL_T_DOMANDA = DELETE FROM shell_t_domande WHERE id_domanda = :idDomanda

SELECT_XMLDOMANDA = SELECT serialized_model FROM aggr_t_model where model_id = :modelId

INSERT_SHELL_T_FILE_DOMANDE = INSERT INTO shell_t_file_domande (file_xml, file_pdf, id_domanda, message_digest) VALUES (:xmlDomanda, :pdfFile, :idDomanda, :messageDigest)

SELECT_NUMMAXDOMANDE = select s.num_max_domande as numMaxDomandeSportello, b.num_max_domande as numMaxDomandeBando \n\
						, d.id_sportello_bando, s.id_bando, d.id_domanda \n\
						from shell_t_domande d, findom_t_sportelli_bandi s, findom_t_bandi b \n\
						where d.id_domanda = :idDomanda \n\
						and d.id_sportello_bando = s.id_sportello_bando \n\
						and s.id_bando = b.id_bando
						
UPDATE_SHELLDOMANDE = UPDATE shell_t_domande \n\
					   SET id_soggetto_invio = :idSoggettoCollegato, \n\
					  dt_invio_domanda = :dataTx  \n\
					   #condizione#  \n\
					   WHERE id_domanda = :idDomanda

UPDATE_SHELLDOMANDE_STATO_CO = UPDATE shell_t_domande \n\
					   SET id_soggetto_conclusione = :idSoggettoCollegato, \n\
					   dt_conclusione = :dataTx \n\
					   WHERE id_domanda = :idDomanda	
					   
UPDATE_SHELLDOMANDE_BANDO_DEMAT = UPDATE shell_t_domande \n\
					   SET id_soggetto_conclusione = :idSoggettoCollegato, dt_invio_domanda = \n\
							(SELECT dt_marca_temporale \n\
							FROM shell_t_documento_index \n\
							WHERE id_domanda = :idDomanda AND id_allegato is null) \n\
					   WHERE id_domanda = :idDomanda
					   
SELECT_PDF_DOMANDA = SELECT file_pdf FROM shell_t_file_domande where id_domanda = :idDomanda \n

SELECT_DOCUMENTO_INDEX = SELECT d.id_documento_index, d.id_domanda, d.uuid_nodo, d.repository, d.nome_file, d.message_digest, d.dt_verifica_firma, \n\
						   d.dt_marca_temporale, d.dt_inserimento, d.id_stato_documento_index, d.id_allegato, d.id_soggetto \n\
						FROM shell_t_soggetti s, shell_t_documento_index d \n\
						where s.cod_fiscale = :codFisc \n\
						and d.id_domanda = :idDomanda \n\
						and d.id_documento_index = :idDocumento \n\
						and s.id_soggetto = d.id_soggetto

SELECT_DOCUMENTO_INDEX_DB = SELECT d.id_documento_index, d.id_domanda, d.uuid_nodo, d.repository, d.nome_file, d.message_digest, d.dt_verifica_firma, \n\
						   d.dt_marca_temporale, d.dt_inserimento, d.id_stato_documento_index, d.id_allegato, d.id_soggetto, file_allegato\n\
						FROM  shell_t_documento_index d \n\
						where d.id_documento_index = :idAllegato  \n
						
SELECT_DOCUMENTO_INDEX_DOMANDA = SELECT d.id_documento_index, d.id_domanda, d.uuid_nodo, d.repository, d.nome_file, d.message_digest, d.dt_verifica_firma, \n\
						   d.dt_marca_temporale, d.dt_inserimento, d.id_stato_documento_index, d.id_allegato, d.id_soggetto \n\
						FROM shell_t_soggetti s, shell_t_documento_index d \n\
						where d.id_domanda = :idDomanda \n\
						and d.id_documento_index = :idDocumento \n\
						and s.id_soggetto = d.id_soggetto						

SELECT_DOCUMENTO_INDEX_BYUUID = SELECT d.id_documento_index, d.id_domanda, d.uuid_nodo, d.repository, d.nome_file, d.message_digest, d.dt_verifica_firma, \n\
						   d.dt_marca_temporale, d.dt_inserimento, d.id_stato_documento_index, d.id_allegato, d.id_soggetto \n\
						FROM  shell_t_documento_index d \n\
						where d.uuid_nodo = :uuid  \n

SELECT_DOCUMENTO_INDEX_BYIDDOM_NOMEFILE = SELECT d.id_documento_index, d.id_domanda, d.uuid_nodo, d.repository, d.nome_file, d.message_digest, d.dt_verifica_firma, \n\
						   d.dt_marca_temporale, d.dt_inserimento, d.id_stato_documento_index, d.id_allegato, d.id_soggetto \n\
						FROM  shell_t_documento_index d \n\
						where d.id_domanda = :idDomanda  \n\
						and d.nome_file = :nomeFile \n
						
SELECT_DOCUMENTO_FIRMATO = SELECT d.id_documento_index, d.id_domanda, d.uuid_nodo, d.repository, d.nome_file, d.message_digest, d.dt_verifica_firma, \n\
						   d.dt_marca_temporale, d.dt_inserimento, d.id_stato_documento_index, d.id_allegato, d.id_soggetto \n\
						FROM  shell_t_documento_index d \n\
						where d.id_domanda = :idDomanda  \n\
						and id_allegato is null \n						

INSERT_DOCUMENTO_INDEX = INSERT INTO shell_t_documento_index \n\
						(   id_domanda,  uuid_nodo,  repository,  nome_file,  message_digest,  dt_verifica_firma, dt_inserimento,   \n\
						    id_stato_documento_index,  id_allegato,  id_soggetto ) \n\
						VALUES \n\
						(  :idDomanda,   :uuidIndex, :repositoryValue,  :nomeFile, :messageDigest, :dtVerificaFirma, \n\
						    now(), :idStatoDocumentoIndex, :idAllegato, :idSoggetto );

SELECT_FINDOM_ALLEGATI = SELECT r.id_bando,  a.id_allegato, a.descrizione, r.flag_obbligatorio, r.dt_inizio,  r.dt_fine, r.flag_firma_digitale  \n\
						FROM findom_r_bandi_allegati r, findom_d_allegati a  \n\
						WHERE r.id_bando = :idBando  \n\
						and r.dt_inizio < now()  \n\
						and (r.dt_fine is null or r.dt_fine > now()) \n\
						and a.id_allegato = r.id_allegato


# idBando; idAllegato; descrizione; flagObbligatorio; dtInizio; dtFine; flagFirmaDigitale;
SELECT_FINDOM_ALLEGATI1 = ( SELECT ra.id_bando, al.id_allegato, al.descrizione, ra.flag_obbligatorio, ra.dt_inizio, ra.dt_fine, ra.flag_firma_digitale  \n\
							FROM findom_r_bandi_allegati ra, findom_d_allegati al \n\
							WHERE ra.id_bando = :idBando \n\
							AND (date_trunc('day',ra.dt_fine) >= CURRENT_DATE or ra.dt_fine is null) \n\
							AND ra.id_allegato=al.id_allegato \n\
							AND ra.id_allegato not in ( \n\
								SELECT b.id_allegato as idAllegato \n\
								FROM findom_t_allegati_sportello b, findom_d_allegati al \n\
								WHERE b.id_sportello_bando = :idSportello \n\
								AND b.id_tipol_beneficiario = ( \n\
								SELECT id_tipol_beneficiario \n\
									FROM shell_t_domande \n\
									WHERE id_domanda= :idDomanda \n\
									AND b.id_allegato=al.id_allegato) \n\
 							 ) \n\
 							order by ra.id_allegato ) \n\
							UNION \n\
							( SELECT b.id_sportello_bando, b.id_allegato, al.descrizione, b.flag_obbligatorio, r.dt_inizio, r.dt_fine, b.flag_firma_digitale  \n\
								FROM findom_t_allegati_sportello as b \n\
								INNER JOIN findom_d_allegati as al ON b.id_allegato = al.id_allegato \n\
								INNER JOIN findom_r_bandi_allegati as r ON b.id_allegato = r.id_allegato \n\
								WHERE b.id_sportello_bando = :idSportello \n\
								AND b.id_tipol_beneficiario = ( SELECT id_tipol_beneficiario \n\
									FROM shell_t_domande \n\
									WHERE id_domanda= :idDomanda \n\
									AND b.id_allegato=al.id_allegato))

	
DELETE_DOCUMENTO_INDEX = DELETE FROM shell_t_documento_index WHERE id_documento_index = :idDoc 

SELECT_LAST_DOCUMENTO_INDEX = SELECT d.id_documento_index, d.id_domanda, d.uuid_nodo, d.repository, d.nome_file, d.message_digest, d.dt_verifica_firma, \n\
						   d.dt_marca_temporale, d.dt_inserimento, d.id_stato_documento_index, d.id_allegato, d.id_soggetto \n\
						FROM  shell_t_documento_index d \n\
						where d.id_domanda = :idDomanda  \n\
						and d.id_documento_index = (select max(di.id_documento_index) FROM  shell_t_documento_index di where di.id_domanda = :idDomanda ) \n

SELECT_PARAMETRO = SELECT TIPI_DOC \n\
					FROM FINDOM_D_PARAMETRI \n\
					WHERE CODICE = :codice \n

SELECT_VALORE_PARAMETRO = SELECT VALORE FROM FINDOM_D_PARAMETRI WHERE codice = :codice \n
					
SELECT_MESSAGE_DIGEST_DOMANDA = SELECT message_digest FROM shell_t_file_domande where id_domanda = :idDomanda \n

SELECT_ALL_DOCUMENTO_INDEX_BY_ID_DOMANDA = SELECT d.id_documento_index, d.id_domanda, d.uuid_nodo, d.repository, d.nome_file, d.message_digest, d.dt_verifica_firma, \n\
						                          d.dt_marca_temporale, d.dt_inserimento, d.id_stato_documento_index, d.id_allegato, d.id_soggetto \n\
						                   FROM SHELL_T_DOCUMENTO_INDEX d \n\
						                   WHERE d.id_domanda = :idDomanda  \n			

SELECT_KEY_REGOLE = SELECT id_regola FROM findom_r_bandi_regole WHERE id_bando =:idBando ORDER BY ordine asc \n
                    
SELECT_REGOLA = SELECT id_regola, cod_regola, descr_regola, corpo_regola FROM findom_d_regole WHERE id_regola = :idRegola \n
                 
SELECT_REGOLE_VERIFICA_FIRMA = SELECT tipologia_verifica_firma, flag_verifica_firma FROM FINDOM_T_BANDI WHERE id_bando = :idBando\n
                 
SELECT_ELENCO_PARAMETRI_REGOLA = SELECT template_id, descr_breve_bando, cod_regola, cod_parametro, valore_parametro \n\
                                 FROM shell_r_parametro_regola \n\
                                 WHERE template_id = :templateId and cod_regola = :codRegola\n
                                 
INSERT_MODEL_ISTRUTTORIA = INSERT INTO ISTR_T_MODEL(MODEL_ID, TEMPLATE_CODE_FK, MODEL_PROGR, USER_ID, SERIALIZED_MODEL, MODEL_STATE_FK, MODEL_NAME, MODEL_LAST_UPDATE) \n\
							SELECT MODEL_ID, TEMPLATE_CODE_FK, MODEL_PROGR, USER_ID, SERIALIZED_MODEL, :idStatoDomandaIstr, MODEL_NAME, MODEL_LAST_UPDATE \n\
							FROM AGGR_T_MODEL \n\
							WHERE MODEL_ID = :idDomanda AND MODEL_STATE_FK = :idStatoDomanda \n  
							
INSERT_MODEL_INDEX_ISTRUTTORIA = INSERT INTO ISTR_T_MODEL_INDEX \n\
							SELECT * \n\
							FROM AGGR_T_MODEL_INDEX \n\
							WHERE MODEL_ID = :idDomanda \n   

SELECT_FLAG_ISTRUTTORIA_ESTERNA = SELECT FLAG_ISTRUTTORIA_ESTERNA FROM FINDOM_T_BANDI WHERE id_bando = :idBando \n

SELECT_ID_STATO_ISTRUTTORIA = SELECT ID_STATO_ISTR FROM FINDOM_D_STATO_ISTRUTTORIA WHERE CODICE = :codice \n

SELECT_V_DOC_DEMAT = SELECT ID_DOMANDA, FLAG_REGIONALE, FLAG_FINPIEMONTE, DEST_FILE_DOMANDA, TIPO_ALLEGATO FROM FINDOM_V_DOC_DEMAT_BATCH WHERE ID_DOMANDA = :idDomanda \n

SELECT_ISTANZA_BY_SPORTELLO = SELECT i.descr_istanza FROM utl_d_istanza i, utl_t_regola_routing r WHERE \n\
						i.id_utl_d_istanza = r.id_utl_d_istanza and r.cod_fase='DOM_W' and r.id_sportello_bando = :idSportello \n
						
SELECT_ELENCO_DOCUMENTI_INTEGRATIVI = select i.nome_file,i.id_documento_index,id_stato_documento_index,p.num_protocollo,p.dt_protocollo, i.uuid_nodo \n\
									from shell_t_documento_index i \n\
									left join shell_t_documento_prot p on i.id_documento_index=p.id_documento_index \n\
									where i.id_domanda=:idDomanda and i.id_allegato=:idAllegato;

SELECT_SHELL_T_DOMANDA = SELECT * FROM SHELL_T_DOMANDE WHERE ID_DOMANDA=:idDomanda;\n

SELECT_FINDOM_T_BANDI =SELECT * FROM FINDOM_T_BANDI WHERE id_bando = :idBando; \n

SELECT_BANDI_DIREZIONE_SETTORE= select b.id_bando, b.descrizione as descrizione_bando , b.descr_breve as descr_breve_bando, b.id_settore, \n\
								s.descrizione as descrizioneSettore, s.id_direzione, d.descrizione as descrizione_direzione  from findom_t_bandi b \n\
								inner join  findom_d_settori s on s.id_settore=b.id_settore \n\
								inner join findom_d_direzioni d on d.id_direzione=s.id_direzione where id_bando=:idBando; \n

SELECT_FUNZIONARIO_BY_ID= select * from findom_d_funzionari where id_funzionario=:idFunzionario;

SELECT_FLAG_BANDO_DEMAT_BY_DOMANDA = SELECT flag_demat \n\
						 FROM findom_v_domande_nuova_gestione WHERE id_domanda = :idDomanda \n

CHIUDI_INTEGRAZIONE=UPDATE shell_t_domande SET flag_abilita_integrazione=false WHERE id_domanda=:idDomanda

SELECT_ULTIMA_DOMANDA_BY_CF=select * from findom_v_xml_dom_ben_anag \n\
where id_domanda = (select id_domanda from findom_v_ultima_inviata_beneficiario  \n\
where cod_fiscale = :beneficiario); \n

SELECT_DENOMINAZIONE_BENEFICIARIO = SELECT denominazione FROM shell_t_soggetti WHERE cod_fiscale = :cfBeneficiario \n

SELECT_CAPOFILA_ACRONIMO_VALIDO_BY_ID_DOMANDA = SELECT id_capofila_acronimo AS idCapofilaAcronimo, id_domanda AS idDomanda, id_acronimo_bando AS idAcronimoBando, \n\
                                                 dt_attivazione AS dtAttivazione, dt_disattivazione AS dtDisattivazione \n\
                                                FROM shell_t_capofila_acronimo WHERE id_domanda = :idDomanda AND dt_disattivazione IS NULL

SELECT_CAPOFILA_ACRONIMO_PARTNER_VALIDO_BY_ID_DOMANDA =SELECT id_capofila_acronimo as idCapofilaAcronimo, id_partner AS idPartner, \n\
			id_domanda_partner AS idDomandaPartner, dt_attivazione AS dtAttivazione, dt_disattivazione AS dtDisattivazione \n\
			FROM shell_r_capofila_acronimo_partner WHERE id_domanda_partner = :idDomandaPartner AND dt_disattivazione IS NULL   
			
UPDATE_DISATTIVA_CAPOFILA_ACRONIMO = UPDATE shell_t_capofila_acronimo SET dt_disattivazione = now() WHERE id_capofila_acronimo = :idCapofilaAcronimo 

UPDATE_DISATTIVA_ACRONIMO_BANDO = UPDATE shell_t_acronimo_bandi SET dt_disattivazione = now() WHERE id_acronimo_bando = :idAcronimoBando     

SELECT_CAPOFILA_ACRONIMO_PARTNER_BY_ID_CAPOFILA_ACRONIMO = SELECT id_capofila_acronimo as idCapofilaAcronimo, id_partner AS idPartner, \n\
			id_domanda_partner AS idDomandaPartner, dt_attivazione AS dtAttivazione, dt_disattivazione AS dtDisattivazione \n\
			FROM shell_r_capofila_acronimo_partner WHERE id_capofila_acronimo = :idCapofilaAcronimo AND dt_disattivazione IS NULL
			
UPDATE_DISATTIVA_CAPOFILA_ACRONIMO_PARTNER = UPDATE shell_r_capofila_acronimo_partner SET dt_disattivazione = now() \n\
			 WHERE id_capofila_acronimo = :idCapofilaAcronimo AND id_partner = :idPartner

UPDATE_DOMANDA_NULL_CAPOFILA_ACRONIMO_PARTNER = UPDATE shell_r_capofila_acronimo_partner SET id_domanda_partner = NULL \n\
			 WHERE id_capofila_acronimo = :idCapofilaAcronimo AND id_partner = :idPartner
			 
UPDATE_STATO_DOMANDA = UPDATE aggr_t_model SET model_state_fk = :statoDomanda WHERE model_id = :idDomanda

QUERY_ID_STATO_OPERATORE_PRESENTATORE = SELECT (xpath('/tree-map/_operatorePresentatore/map/idStato/text()',  aggr_t_model.serialized_model))[1]::text AS idStato \n\
  		FROM  aggr_t_model WHERE aggr_t_model.model_id = :idDomanda

SELECT_STATO_DOMANDA = SELECT model_state_fk AS statoDomanda FROM aggr_t_model WHERE model_id = :idDomanda

SELECT_STEREOTIPO_DOMANDA = SELECT tb.cod_stereotipo FROM shell_t_domande d, findom_d_tipol_beneficiari tb WHERE d.id_domanda = :idDomanda \n\
							AND  tb.id_tipol_beneficiario = d.id_tipol_beneficiario
	
SELECT_FLAGPROGETTICOMUNI_DOMANDA = SELECT b.flag_progetti_comuni FROM findom_t_bandi b ,findom_t_sportelli_bandi sp, shell_t_domande d \n\
									WHERE d.id_domanda = :idDomanda AND b.id_bando = sp.id_bando AND sp.id_sportello_bando = d.id_sportello_bando

INSERT_DOCUMENTO_INDEX_DB = INSERT INTO shell_t_documento_index \n\
						(   id_domanda,  uuid_nodo,  repository,  nome_file,  message_digest,  dt_verifica_firma, dt_inserimento,   \n\
						    id_stato_documento_index, id_allegato, id_soggetto, file_allegato ) \n\
						VALUES \n\
						(  :idDomanda,   :uuidIndex, :repositoryValue,  :nomeFile, :messageDigest, :dtVerificaFirma, \n\
						    now(), :idStatoDocumentoIndex, :idAllegato, :idSoggetto, :file )  RETURNING id_documento_index

COUNT_SOGGETTI_BONUS_COVID = SELECT COUNT(id_domanda) FROM findom_t_soggetti_bonus_covid s \n\
							JOIN shell_t_soggetti t ON s.cod_fiscale = t.cod_fiscale OR s.partita_iva = t.cod_fiscale \n\
							JOIN shell_t_domande d ON t.id_soggetto = d.id_soggetto_beneficiario \n\
							JOIN findom_t_sportelli_bandi sp ON d.id_sportello_bando = sp.id_sportello_bando \n\
							WHERE (s.cod_fiscale = :codFiscale OR s.partita_iva = :codFiscale) AND sp.id_bando = 87 \n\
							AND EXISTS(SELECT unnest(xpath('_estremiBancari/map/iban/text()'::text, serialized_model))::text \n\
							FROM aggr_t_model WHERE d.id_domanda = model_id) \n

UPDATE_SOGGETTI_BONUS_COVID = UPDATE findom_t_soggetti_bonus_covid SET iban = null WHERE (cod_fiscale = :codFiscale \n\
								OR partita_iva = :codFiscale ) \n

QUERY_DENOMINAZIONE_OPERATORE_PRESENTATORE = SELECT unnest(xpath('/tree-map/_operatorePresentatore/map/denominazione/text()',  aggr_t_model.serialized_model))::text AS denominazione \n\
  		FROM  aggr_t_model WHERE aggr_t_model.model_id = :idDomanda
